if $SHELL =~ 'fish'
    set shell=/bin/bash
endif
let mapleader = "\<Space>"
set nocompatible
filetype off
" Note: Skip initialization for vim-tiny or vim-small.
if !1 | finish | endif

if has('vim_starting')
    set nocompatible               " Be iMproved
    " Required:
    set runtimepath+=~/.vim/bundle/neobundle.vim/
endif
" Required:
call neobundle#begin(expand('~/.vim/bundle/'))

" Let NeoBundle manage NeoBundle
" Required:
NeoBundleFetch 'Shougo/neobundle.vim'

NeoBundle 'Shougo/neobundle.vim'

NeoBundle 'Shougo/unite.vim'

NeoBundle 'Shougo/neomru.vim'

NeoBundle 'bling/vim-airline'

NeoBundleLazy 'scrooloose/nerdtree', {
            \ 'autoload' : {'commands' : ['NERDTree']}
            \}

NeoBundleLazy 'davidhalter/jedi-vim', {
            \ 'autoload' : {'filetypes' : ["python"]}
            \}

NeoBundleLazy 'LaTex-Box-Team/LaTex-Box', {
            \ 'autoload' : {'filetypes' : ['tex']}
            \}

NeoBundle 'majutsushi/tagbar'

NeoBundle "kien/rainbow_parentheses.vim"

autocmd BufRead *.sage set filetype=python

if has("mac")
NeoBundleLazy 'rip-rip/clang_complete', {
            \ 'autoload': {'filetypes': ["cpp", "c"]}
            \ }
NeoBundleLazy 'Shougo/neocomplcache-clang_complete', {
			\ 'autoload': {'filetypes': ["cpp", "c"]}
			\}
endif

NeoBundleLazy 'Shougo/neocomplete', {
            \ 'autoload' : { 'insert' : '1'}
			\ }

NeoBundle 'tpope/vim-surround'

NeoBundle 'tpope/vim-fugitive'

NeoBundleLazy 'scrooloose/syntastic', {
            \ 'autoload' : {'filetypes' : ['cpp', 'c', 'java', 'py']}}

NeoBundleLazy 'rking/ag.vim', {
            \'autoload' : { 'commands' : ["Ag"] }
            \}

NeoBundle 'vim-scripts/tComment'

NeoBundleLazy 'Shougo/neosnippet', {
            \ 'autoload' : {'filetypes' : ['cpp', 'c', 'java', 'py']}}

NeoBundleLazy 'Shougo/neosnippet-snippets', {
            \ 'autoload' : {'filetypes' : ['cpp', 'c', 'java', 'py']}}

NeoBundle 'Raimondi/delimitMate'

NeoBundle "myusuf3/numbers.vim"

" NeoBundle 'terryma/vim-multiple-cursors'

NeoBundleLazy 'fatih/vim-go', {
            \ 'autoload' : {'filetypes' : ['go']}
            \ }

let g:go_fmt_command = 'goimports'

NeoBundleLazy 'Blackrush/vim-gocode', {
            \ 'autoload' : {'filetypes' : ['go']}
            \}

NeoBundleLazy 'dgryski/vim-godef', {
            \ 'autoload' : {'filetypes' : ['go']}
            \}

NeoBundleLazy 'kchmck/vim-coffee-script', {
			\ 'autoload' : {'filetypes' : ['coffee']}}

NeoBundle 'Shougo/vimproc.vim', {
            \ 'build' : {
            \ 'mac' : 'make -f make_mac.mak'}}

NeoBundle 'mattn/emmet-vim', {
			\ 'autoload' : {'filetypes' : ['js', 'html']}}

NeoBundle 'Shougo/vimshell'

NeoBundle 'chase/vim-ansible-yaml', {
			\ 'autoload' : {'filetypes' : ['yml']}
			\}

NeoBundle 'christoomey/vim-tmux-navigator'

call neobundle#end()
NeoBundleCheck

" Basic Settings
set nocp ""set no compatiable
set ru   ""set ruler
set hls  ""set hightlights
set backspace=indent,eol,start  ""backspace will take care of indent EOF etc.
set whichwrap=b,s,<,>,[,]
set encoding=utf-8
set fileencodings=ucs-bom,utf-8,cp936
set number
set showcmd
set t_Co=256
set nocursorcolumn
set nocursorline
set norelativenumber
set foldmethod=indent
set nofoldenable
set smartcase
set matchtime=1 "100MS
set showtabline=1
set incsearch
"nnoremap <silent> <C-l> :<C-u>nohlsearch<CR><C-l>
vmap <Leader>y "+y
vmap <Leader>d "+d
nmap <Leader>p "+p
nmap <Leader>P "+P
vmap <Leader>p "+p
vmap <Leader>P "+P
syntax on
syntax sync minlines=80 maxlines=300
set synmaxcol=128
set regexpengine=1
set lazyredraw
filetype indent on
inoremap <C-e> <C-o>$
inoremap <C-a> <C-o>0
xnoremap * :<C-u>call <SID>VSetSearch()<CR>/<C-R>=@/<CR><CR>
xnoremap # :<C-u>call <SID>VSetSearch()<CR>?<C-R>=@/<CR><CR>
function! s:VSetSearch()
    let temp = @s
    norm! gv"sy
    let @/ = '\V' . substitute(escape(@s, '/\'), '\n', '\\n', 'g')
    let @s = temp
endfunction

set expandtab
set sw=4  ""auto indent for 4
set ts=4  ""tab width for 4
set smarttab  ""can delete four space at once.
set sm  ""parentless match
set cindent ""C Indent
set cino+=N-s,g0,:0,(0
set iskeyword-=_
autocmd BufWritePre * :%s/\s\+$//e "auto strip trailling whitespace
set selection=inclusive
:map <bs> bdw
"set background=dark
"colorscheme solarized
